/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.docs.chamcong.model.impl;

import com.liferay.docs.chamcong.model.Users;
import com.liferay.docs.chamcong.model.UsersModel;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import java.io.Serializable;

import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the Users service. Represents a row in the &quot;_Users&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>UsersModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link UsersImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see UsersImpl
 * @generated
 */
@JSON(strict = true)
public class UsersModelImpl extends BaseModelImpl<Users> implements UsersModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a users model instance should use the <code>Users</code> interface instead.
	 */
	public static final String TABLE_NAME = "_Users";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"id_", Types.INTEGER},
		{"groupId", Types.BIGINT}, {"hovaten", Types.VARCHAR},
		{"email", Types.VARCHAR}, {"chucvu_id", Types.BIGINT},
		{"trangthai", Types.BIGINT}, {"phongban_id", Types.BIGINT},
		{"ca_lam_id", Types.BIGINT}, {"ca_lam_toi", Types.BIGINT},
		{"ma_xac_nhan", Types.VARCHAR}, {"zalo_id", Types.VARCHAR},
		{"cham_cong_ngoai", Types.BIGINT}, {"so_ngay_nghi_phep", Types.BIGINT},
		{"phu_trach_phong", Types.INTEGER}, {"created_at", Types.TIMESTAMP},
		{"updated_at", Types.TIMESTAMP}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("id_", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("hovaten", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("email", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("chucvu_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("trangthai", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("phongban_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ca_lam_id", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ca_lam_toi", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("ma_xac_nhan", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("zalo_id", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("cham_cong_ngoai", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("so_ngay_nghi_phep", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("phu_trach_phong", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("created_at", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("updated_at", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE =
		"create table _Users (uuid_ VARCHAR(75) null,id_ INTEGER not null primary key,groupId LONG,hovaten VARCHAR(75) null,email VARCHAR(75) null,chucvu_id LONG,trangthai LONG,phongban_id LONG,ca_lam_id LONG,ca_lam_toi LONG,ma_xac_nhan VARCHAR(75) null,zalo_id VARCHAR(75) null,cham_cong_ngoai LONG,so_ngay_nghi_phep LONG,phu_trach_phong INTEGER,created_at DATE null,updated_at DATE null)";

	public static final String TABLE_SQL_DROP = "drop table _Users";

	public static final String ORDER_BY_JPQL = " ORDER BY users.id ASC";

	public static final String ORDER_BY_SQL = " ORDER BY _Users.id_ ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long GROUPID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public UsersModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _id;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _id;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Users.class;
	}

	@Override
	public String getModelClassName() {
		return Users.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<Users, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<Users, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Users, Object> attributeGetterFunction = entry.getValue();

			attributes.put(
				attributeName, attributeGetterFunction.apply((Users)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<Users, Object>> attributeSetterBiConsumers =
			getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<Users, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept((Users)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<Users, Object>> getAttributeGetterFunctions() {
		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<Users, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static final Map<String, Function<Users, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<Users, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<Users, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<Users, Object>>();
		Map<String, BiConsumer<Users, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<Users, ?>>();

		attributeGetterFunctions.put("uuid", Users::getUuid);
		attributeSetterBiConsumers.put(
			"uuid", (BiConsumer<Users, String>)Users::setUuid);
		attributeGetterFunctions.put("id", Users::getId);
		attributeSetterBiConsumers.put(
			"id", (BiConsumer<Users, Integer>)Users::setId);
		attributeGetterFunctions.put("groupId", Users::getGroupId);
		attributeSetterBiConsumers.put(
			"groupId", (BiConsumer<Users, Long>)Users::setGroupId);
		attributeGetterFunctions.put("hovaten", Users::getHovaten);
		attributeSetterBiConsumers.put(
			"hovaten", (BiConsumer<Users, String>)Users::setHovaten);
		attributeGetterFunctions.put("email", Users::getEmail);
		attributeSetterBiConsumers.put(
			"email", (BiConsumer<Users, String>)Users::setEmail);
		attributeGetterFunctions.put("chucvu_id", Users::getChucvu_id);
		attributeSetterBiConsumers.put(
			"chucvu_id", (BiConsumer<Users, Long>)Users::setChucvu_id);
		attributeGetterFunctions.put("trangthai", Users::getTrangthai);
		attributeSetterBiConsumers.put(
			"trangthai", (BiConsumer<Users, Long>)Users::setTrangthai);
		attributeGetterFunctions.put("phongban_id", Users::getPhongban_id);
		attributeSetterBiConsumers.put(
			"phongban_id", (BiConsumer<Users, Long>)Users::setPhongban_id);
		attributeGetterFunctions.put("ca_lam_id", Users::getCa_lam_id);
		attributeSetterBiConsumers.put(
			"ca_lam_id", (BiConsumer<Users, Long>)Users::setCa_lam_id);
		attributeGetterFunctions.put("ca_lam_toi", Users::getCa_lam_toi);
		attributeSetterBiConsumers.put(
			"ca_lam_toi", (BiConsumer<Users, Long>)Users::setCa_lam_toi);
		attributeGetterFunctions.put("ma_xac_nhan", Users::getMa_xac_nhan);
		attributeSetterBiConsumers.put(
			"ma_xac_nhan", (BiConsumer<Users, String>)Users::setMa_xac_nhan);
		attributeGetterFunctions.put("zalo_id", Users::getZalo_id);
		attributeSetterBiConsumers.put(
			"zalo_id", (BiConsumer<Users, String>)Users::setZalo_id);
		attributeGetterFunctions.put(
			"cham_cong_ngoai", Users::getCham_cong_ngoai);
		attributeSetterBiConsumers.put(
			"cham_cong_ngoai",
			(BiConsumer<Users, Long>)Users::setCham_cong_ngoai);
		attributeGetterFunctions.put(
			"so_ngay_nghi_phep", Users::getSo_ngay_nghi_phep);
		attributeSetterBiConsumers.put(
			"so_ngay_nghi_phep",
			(BiConsumer<Users, Long>)Users::setSo_ngay_nghi_phep);
		attributeGetterFunctions.put(
			"phu_trach_phong", Users::getPhu_trach_phong);
		attributeSetterBiConsumers.put(
			"phu_trach_phong",
			(BiConsumer<Users, Integer>)Users::setPhu_trach_phong);
		attributeGetterFunctions.put("created_at", Users::getCreated_at);
		attributeSetterBiConsumers.put(
			"created_at", (BiConsumer<Users, Date>)Users::setCreated_at);
		attributeGetterFunctions.put("updated_at", Users::getUpdated_at);
		attributeSetterBiConsumers.put(
			"updated_at", (BiConsumer<Users, Date>)Users::setUpdated_at);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@JSON
	@Override
	public int getId() {
		return _id;
	}

	@Override
	public void setId(int id) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_id = id;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalGroupId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("groupId"));
	}

	@JSON
	@Override
	public String getHovaten() {
		if (_hovaten == null) {
			return "";
		}
		else {
			return _hovaten;
		}
	}

	@Override
	public void setHovaten(String hovaten) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_hovaten = hovaten;
	}

	@JSON
	@Override
	public String getEmail() {
		if (_email == null) {
			return "";
		}
		else {
			return _email;
		}
	}

	@Override
	public void setEmail(String email) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_email = email;
	}

	@JSON
	@Override
	public long getChucvu_id() {
		return _chucvu_id;
	}

	@Override
	public void setChucvu_id(long chucvu_id) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_chucvu_id = chucvu_id;
	}

	@JSON
	@Override
	public long getTrangthai() {
		return _trangthai;
	}

	@Override
	public void setTrangthai(long trangthai) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_trangthai = trangthai;
	}

	@JSON
	@Override
	public long getPhongban_id() {
		return _phongban_id;
	}

	@Override
	public void setPhongban_id(long phongban_id) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_phongban_id = phongban_id;
	}

	@JSON
	@Override
	public long getCa_lam_id() {
		return _ca_lam_id;
	}

	@Override
	public void setCa_lam_id(long ca_lam_id) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ca_lam_id = ca_lam_id;
	}

	@JSON
	@Override
	public long getCa_lam_toi() {
		return _ca_lam_toi;
	}

	@Override
	public void setCa_lam_toi(long ca_lam_toi) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ca_lam_toi = ca_lam_toi;
	}

	@JSON
	@Override
	public String getMa_xac_nhan() {
		if (_ma_xac_nhan == null) {
			return "";
		}
		else {
			return _ma_xac_nhan;
		}
	}

	@Override
	public void setMa_xac_nhan(String ma_xac_nhan) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_ma_xac_nhan = ma_xac_nhan;
	}

	@JSON
	@Override
	public String getZalo_id() {
		if (_zalo_id == null) {
			return "";
		}
		else {
			return _zalo_id;
		}
	}

	@Override
	public void setZalo_id(String zalo_id) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_zalo_id = zalo_id;
	}

	@JSON
	@Override
	public long getCham_cong_ngoai() {
		return _cham_cong_ngoai;
	}

	@Override
	public void setCham_cong_ngoai(long cham_cong_ngoai) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_cham_cong_ngoai = cham_cong_ngoai;
	}

	@JSON
	@Override
	public long getSo_ngay_nghi_phep() {
		return _so_ngay_nghi_phep;
	}

	@Override
	public void setSo_ngay_nghi_phep(long so_ngay_nghi_phep) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_so_ngay_nghi_phep = so_ngay_nghi_phep;
	}

	@JSON
	@Override
	public int getPhu_trach_phong() {
		return _phu_trach_phong;
	}

	@Override
	public void setPhu_trach_phong(int phu_trach_phong) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_phu_trach_phong = phu_trach_phong;
	}

	@JSON
	@Override
	public Date getCreated_at() {
		return _created_at;
	}

	@Override
	public void setCreated_at(Date created_at) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_created_at = created_at;
	}

	@JSON
	@Override
	public Date getUpdated_at() {
		return _updated_at;
	}

	@Override
	public void setUpdated_at(Date updated_at) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_updated_at = updated_at;
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public Users toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, Users>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		UsersImpl usersImpl = new UsersImpl();

		usersImpl.setUuid(getUuid());
		usersImpl.setId(getId());
		usersImpl.setGroupId(getGroupId());
		usersImpl.setHovaten(getHovaten());
		usersImpl.setEmail(getEmail());
		usersImpl.setChucvu_id(getChucvu_id());
		usersImpl.setTrangthai(getTrangthai());
		usersImpl.setPhongban_id(getPhongban_id());
		usersImpl.setCa_lam_id(getCa_lam_id());
		usersImpl.setCa_lam_toi(getCa_lam_toi());
		usersImpl.setMa_xac_nhan(getMa_xac_nhan());
		usersImpl.setZalo_id(getZalo_id());
		usersImpl.setCham_cong_ngoai(getCham_cong_ngoai());
		usersImpl.setSo_ngay_nghi_phep(getSo_ngay_nghi_phep());
		usersImpl.setPhu_trach_phong(getPhu_trach_phong());
		usersImpl.setCreated_at(getCreated_at());
		usersImpl.setUpdated_at(getUpdated_at());

		usersImpl.resetOriginalValues();

		return usersImpl;
	}

	@Override
	public Users cloneWithOriginalValues() {
		UsersImpl usersImpl = new UsersImpl();

		usersImpl.setUuid(this.<String>getColumnOriginalValue("uuid_"));
		usersImpl.setId(this.<Integer>getColumnOriginalValue("id_"));
		usersImpl.setGroupId(this.<Long>getColumnOriginalValue("groupId"));
		usersImpl.setHovaten(this.<String>getColumnOriginalValue("hovaten"));
		usersImpl.setEmail(this.<String>getColumnOriginalValue("email"));
		usersImpl.setChucvu_id(this.<Long>getColumnOriginalValue("chucvu_id"));
		usersImpl.setTrangthai(this.<Long>getColumnOriginalValue("trangthai"));
		usersImpl.setPhongban_id(
			this.<Long>getColumnOriginalValue("phongban_id"));
		usersImpl.setCa_lam_id(this.<Long>getColumnOriginalValue("ca_lam_id"));
		usersImpl.setCa_lam_toi(
			this.<Long>getColumnOriginalValue("ca_lam_toi"));
		usersImpl.setMa_xac_nhan(
			this.<String>getColumnOriginalValue("ma_xac_nhan"));
		usersImpl.setZalo_id(this.<String>getColumnOriginalValue("zalo_id"));
		usersImpl.setCham_cong_ngoai(
			this.<Long>getColumnOriginalValue("cham_cong_ngoai"));
		usersImpl.setSo_ngay_nghi_phep(
			this.<Long>getColumnOriginalValue("so_ngay_nghi_phep"));
		usersImpl.setPhu_trach_phong(
			this.<Integer>getColumnOriginalValue("phu_trach_phong"));
		usersImpl.setCreated_at(
			this.<Date>getColumnOriginalValue("created_at"));
		usersImpl.setUpdated_at(
			this.<Date>getColumnOriginalValue("updated_at"));

		return usersImpl;
	}

	@Override
	public int compareTo(Users users) {
		int primaryKey = users.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof Users)) {
			return false;
		}

		Users users = (Users)object;

		int primaryKey = users.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<Users> toCacheModel() {
		UsersCacheModel usersCacheModel = new UsersCacheModel();

		usersCacheModel.uuid = getUuid();

		String uuid = usersCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			usersCacheModel.uuid = null;
		}

		usersCacheModel.id = getId();

		usersCacheModel.groupId = getGroupId();

		usersCacheModel.hovaten = getHovaten();

		String hovaten = usersCacheModel.hovaten;

		if ((hovaten != null) && (hovaten.length() == 0)) {
			usersCacheModel.hovaten = null;
		}

		usersCacheModel.email = getEmail();

		String email = usersCacheModel.email;

		if ((email != null) && (email.length() == 0)) {
			usersCacheModel.email = null;
		}

		usersCacheModel.chucvu_id = getChucvu_id();

		usersCacheModel.trangthai = getTrangthai();

		usersCacheModel.phongban_id = getPhongban_id();

		usersCacheModel.ca_lam_id = getCa_lam_id();

		usersCacheModel.ca_lam_toi = getCa_lam_toi();

		usersCacheModel.ma_xac_nhan = getMa_xac_nhan();

		String ma_xac_nhan = usersCacheModel.ma_xac_nhan;

		if ((ma_xac_nhan != null) && (ma_xac_nhan.length() == 0)) {
			usersCacheModel.ma_xac_nhan = null;
		}

		usersCacheModel.zalo_id = getZalo_id();

		String zalo_id = usersCacheModel.zalo_id;

		if ((zalo_id != null) && (zalo_id.length() == 0)) {
			usersCacheModel.zalo_id = null;
		}

		usersCacheModel.cham_cong_ngoai = getCham_cong_ngoai();

		usersCacheModel.so_ngay_nghi_phep = getSo_ngay_nghi_phep();

		usersCacheModel.phu_trach_phong = getPhu_trach_phong();

		Date created_at = getCreated_at();

		if (created_at != null) {
			usersCacheModel.created_at = created_at.getTime();
		}
		else {
			usersCacheModel.created_at = Long.MIN_VALUE;
		}

		Date updated_at = getUpdated_at();

		if (updated_at != null) {
			usersCacheModel.updated_at = updated_at.getTime();
		}
		else {
			usersCacheModel.updated_at = Long.MIN_VALUE;
		}

		return usersCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<Users, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<Users, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Users, Object> attributeGetterFunction = entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((Users)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<Users, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<Users, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Users, Object> attributeGetterFunction = entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((Users)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, Users>
			_escapedModelProxyProviderFunction =
				ProxyUtil.getProxyProviderFunction(
					Users.class, ModelWrapper.class);

	}

	private String _uuid;
	private int _id;
	private long _groupId;
	private String _hovaten;
	private String _email;
	private long _chucvu_id;
	private long _trangthai;
	private long _phongban_id;
	private long _ca_lam_id;
	private long _ca_lam_toi;
	private String _ma_xac_nhan;
	private String _zalo_id;
	private long _cham_cong_ngoai;
	private long _so_ngay_nghi_phep;
	private int _phu_trach_phong;
	private Date _created_at;
	private Date _updated_at;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<Users, Object> function = _attributeGetterFunctions.get(
			columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((Users)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put("id_", _id);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("hovaten", _hovaten);
		_columnOriginalValues.put("email", _email);
		_columnOriginalValues.put("chucvu_id", _chucvu_id);
		_columnOriginalValues.put("trangthai", _trangthai);
		_columnOriginalValues.put("phongban_id", _phongban_id);
		_columnOriginalValues.put("ca_lam_id", _ca_lam_id);
		_columnOriginalValues.put("ca_lam_toi", _ca_lam_toi);
		_columnOriginalValues.put("ma_xac_nhan", _ma_xac_nhan);
		_columnOriginalValues.put("zalo_id", _zalo_id);
		_columnOriginalValues.put("cham_cong_ngoai", _cham_cong_ngoai);
		_columnOriginalValues.put("so_ngay_nghi_phep", _so_ngay_nghi_phep);
		_columnOriginalValues.put("phu_trach_phong", _phu_trach_phong);
		_columnOriginalValues.put("created_at", _created_at);
		_columnOriginalValues.put("updated_at", _updated_at);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");
		attributeNames.put("id_", "id");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("uuid_", 1L);

		columnBitmasks.put("id_", 2L);

		columnBitmasks.put("groupId", 4L);

		columnBitmasks.put("hovaten", 8L);

		columnBitmasks.put("email", 16L);

		columnBitmasks.put("chucvu_id", 32L);

		columnBitmasks.put("trangthai", 64L);

		columnBitmasks.put("phongban_id", 128L);

		columnBitmasks.put("ca_lam_id", 256L);

		columnBitmasks.put("ca_lam_toi", 512L);

		columnBitmasks.put("ma_xac_nhan", 1024L);

		columnBitmasks.put("zalo_id", 2048L);

		columnBitmasks.put("cham_cong_ngoai", 4096L);

		columnBitmasks.put("so_ngay_nghi_phep", 8192L);

		columnBitmasks.put("phu_trach_phong", 16384L);

		columnBitmasks.put("created_at", 32768L);

		columnBitmasks.put("updated_at", 65536L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private Users _escapedModel;

}